/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
  flavor = "tap-preferred";
 tapping_term_ms = <200>;
 };

/ { 

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        
         combo_tab {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp TAB>;
        };
        
        combo_ent {
            timeout-ms = <50>;
	        key-positions = <27 28>;
            bindings = <&kp RET>;
        };

        combo_bspc {
            timeout-ms = <50>;
	        key-positions = <7 8>;
            bindings = <&kp BSPC>;
        };
        
        combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };
        
                           combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };
        
        
           combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };     
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hs: homerow_shifts {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFTS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        hsl: homerow_shifts_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFTS_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&to>;
        };
        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
	    bl: layertap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYERTAP";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&to>, <&kp>;
        };
    };

        keymap {
                compatible = "zmk,keymap";
                
        default_layer {
            bindings = <
                &kp Q        &kp D      &kp R      &kp W &kp B     &kp J &kp F  &kp U     &kp P   &kp SCLN
                &kp A        &hm LCTL S &hm LALT H &kp T &kp G     &kp Y &kp N  &kp E     &kp O   &kp I      
                &hs LSFT Z   &kp X      &kp M      &kp C &kp V     &kp K &kp L  &kp CMMA &kp DOT &hs RSHIFT FSLH
                                        //   &mo 1 &kp LCTL  				&kp SPC &mo 2 
                            &mt LGUI TAB  &to 1     &kp SPC  &kp RET
            >;
        };

       		left_layer {
		bindings = <
		&kp BANG         &kp ATSN           &kp HASH         &kp DLLR           &kp PRCT    			&kp CRRT  &kp AMPS  &kp KMLT &kp LPRN &kp RPRN 
		&kp LS(LA(DOWN)) &kp LS(LA(DOWN))   &hm LALT F12     &kp F2             &kp LG(LS(LC(N4))) 		&kp LEFT  &kp DOWN  &kp UP   &kp RIGHT &kp BSLH
		&kp ESC          &kp TILDE 	        &kp NON_US_BSLH  &kp LG(LS(LA(V)))  &kp TILDE2             	&kp UNDER &kp LEFT  &kp DOWN &kp RIGHT &kp PIPE 
                                                                                &trans  &to 0		    &kp RGUI &to 2 
		>;
		};
		

        
		right_layer {
		bindings = <
		&kp BANG   &kp ATSN     &kp LPAR    &kp RPAR &kp UNDER    		&kp MINUS &kp N7   &kp N8 &kp N9  &kp KMLT 
		&bt BT_CLR &bt BT_SEL 1 &kp LBRC    &kp RBRC &kp PIPE 			&kp PLUS  &kp N4   &kp N5 &kp N6  &kp FSLH
		&kp LSFT   &bt BT_SEL 2 &kp LBKT    &kp RBKT &kp BSLH    		&kp N0    &kp N1   &kp N2 &kp N3  &kp EQUAL
                                         &trans &to 0 				&kp CMMA &to 3 
		>;
		};	
		
		tri_layer {
		bindings = <
		&kp NUM_1  &kp NUM_2    &kp NUM_3    &kp NUM_4    &kp NUM_5 			&kp E &kp E   &trans   &trans  &trans
		&kp F1 &kp F2 &kp F3 &kp F4 &kp F5  						&trans &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans 
		&bt BT_CLR  &bt BT_NXT &bt BT_PRV &kp F6 &kp F7   				&trans &kp PG_DN  &kp K_VOL_DN  &trans &trans   
					 &trans &to 0  					&trans &trans 
		>;
		};	
        
	};
};
